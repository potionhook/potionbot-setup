#!/usr/bin/env bash

OLD_UPDATE=$(git rev-parse HEAD:update)
git pull --ff
NEW_UPDATE=$(git rev-parse HEAD:update)

if [ $OLD_UPDATE != $NEW_UPDATE ]; then
    echo Update script self update!
    exec $0 $@
fi

function updateRepoURL() {
    local URL="$(curl --max-time 10 -Ls -o /dev/null -w %{url_effective} https://github.com/potionhook/potionhook.git || echo error)"
    local GIT_REMOTE=$(git config --get remote.main.url || echo unknown)
    if [ "$URL" != "error" ] && [ "$GIT_REMOTE" != "$URL" ]; then
        git remote set-url main "$URL"
        echo -e "\033[1;33m\n\nMigrations: Updated remote URL to new repo! Welcome to $URL!\n\n\033[0m"
    fi
}

pushd potionhook

GIT_REMOTE=$(git config --get remote.main.url || echo unknown)
if [ "$GIT_REMOTE" == "https://github.com/potionhook/potionhook.git" ] || [ "$GIT_REMOTE" == "https://github.com/potionhook/potionhook.git" ]; then
    updateRepoURL
fi


git pull --ff
git submodule update --init --recursive
popd
mkdir -p build
pushd build
cmake -DCMAKE_BUILD_TYPE=Release -DVisuals_DrawType="Textmode" -DVACBypass=1 -DEnableWarnings=0 ../potionhook/
numcpu=$(grep -c ^processor /proc/cpuinfo)
make -j$numcpu
if ! [ -e "bin/libcathook.so" ]; then
    echo "FATAL: Build failed"
    exit
fi
popd
sudo mkdir -p "/opt/cathook/bin/"
sudo cp "build/bin/libcathook.so" "/opt/cathook/bin/libcathook-textmode.so"

pushd potionhook-ipc-server
git remote set-url main https://github.com/potionhook/potionhook-ipc-server
bash update.sh
popd

pushd just-disable-vac
git pull -ff
mkdir -p build && pushd build
cmake .. && make
sudo cp -r bin32 /opt/
sudo cp -r bin64 /opt/
popd
popd

pushd potionhook-ipc-web-panel
git remote set-url main https://github.com/potionhook/potionhook-ipc-web-panel
bash update.sh
popd


echo "Fetching navmeshes..."
if [ -d ./potionbot-database ]; then
	pushd potionbot-database
	git fetch --depth 1
	git reset --hard main
	popd
else
	git clone --depth 1 https://github.com/potionhook/potionbot-database
fi

echo "loading obama nudes"
sudo rsync potionbot-database/nav\ meshes/*.nav ~/.steam/steam/steamapps/common/Team\ Fortress\ 2/tf/maps/
sudo chmod 755 ~/.steam/steam/steamapps/common/Team\ Fortress\ 2/tf/maps/*.nav
sudo chmod +x ~/
sudo chmod +777 *
echo "Done."
